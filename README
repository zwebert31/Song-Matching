Song-Matching
=============

Software Development (CS 4500)

Team Members:
Kevin Doherty - doherty.kev@husky.neu.edu
Katie Gilligan - gilligan.k@husky.neu.edu
Zachary Webert - webert.z@husky.neu.edu
Samuel Lynch - lynch.s@husky.neu.edu

To run the program go to the directory which contains the python
file called dan and enter one of the following commands:

To compare two audio files: 
./dan -f <pathname> -f <pathname>

To compare an audio file to a directory:
./dan -f <pathname> -d <pathname>

To compare a directory to an audio file:
./dan -d <pathname> -f <pathname>

To compare two directories:
./dan -d <pathname> -d <pathname>

Each of the pathnames will either be the path of an audio file or
of a directory. Each individual file must either end in .wav
and be in WAVE format, end in .mp3 and be in MP3 format or end in
.ogg and be in and be in Ogg format.

The .wav files must be in RIFF format, AudioFormat 1, stereo
or mono, 8 or 16-bit samples with a sampling rate of 11.025, 22.05,
44.1 or 48 kHz. The .mp3 files must be in MPEG-1 Audio Layer III format.
The .ogg files must be in a format that version 1.4.0 of the oggdec program
will decode into a supported WAVE format without the use of command-line
options.

No third party software was used.

If two files match either from a file path or a directory of files the text:
"MATCH <file1> <file2> <time of match in file1> <time of match in file2>"
will be printed. Two files will be considered a match if they share 
a segment of 5 seconds or more. 
If two files share no segments, nothing will be printed.
If an incorrect command is entered, the text "ERROR: incorrect command line" 
will be printed.
If an unsupported file type is detected, the text "ERROR: <file> is not a 
supported format" will be printed.
